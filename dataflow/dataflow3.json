{
	"name": "dataflow3",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "sqldbconnection",
						"type": "DatasetReference"
					},
					"name": "source1",
					"description": "omemployee"
				},
				{
					"dataset": {
						"referenceName": "sqldbconnection",
						"type": "DatasetReference"
					},
					"name": "source2",
					"description": "employee"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DelimitedText6",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "innerjoin"
				}
			],
			"scriptLines": [
				"source(output(",
				"          EMPLOYEE_ID as integer,",
				"          FIRSTNAME as string,",
				"          LASTNAME as string,",
				"          DATE_OF_BIRTH as date,",
				"          SALARY as double,",
				"          PHONE_NO as string,",
				"          CITY as string,",
				"          STATE as string,",
				"          MARITAL_STATUS as string,",
				"          NO_OF_KIDS as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source1",
				"source(output(",
				"          EMPLOYEE_ID as integer,",
				"          FIRSTNAME as string,",
				"          LASTNAME as string,",
				"          DATE_OF_BIRTH as date,",
				"          SALARY as double,",
				"          PHONE_NO as string,",
				"          CITY as string,",
				"          STATE as string,",
				"          MARITAL_STATUS as string,",
				"          NO_OF_KIDS as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source2",
				"source1, source2 join(source1@EMPLOYEE_ID == source2@EMPLOYEE_ID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> innerjoin",
				"innerjoin sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}